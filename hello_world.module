<?php
/**
 * @file
 * Hello world module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Render\BubbleableMetadata;

/**
 * Implements hook_help().
 */
function hello_world_help(string $route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hello_world':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This is a simple module .') . '</p>';
      return $output;
      break;
  }
}

/**
 * Implements hook_mail()
 */
function hello_world_mail($key, &$message, $params)
{
  switch ($key) {
    case 'hello_world_log':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('There is an error on your website');
      $message['body'][] = $params['message'];

      $userMessage = 'The user that is logged in: [current-user:name] - [hello_world:salutation].';
      $message['body'][] = \Drupal::token()->replace($userMessage, ['current-user' => \Drupal::currentUser()]);
      break;
  }
}

/**
 * Implement hook_token_info()
 */
function hello_world_token_info()
{
  $type = [
    'name' => t('Hello World'),
    'description' => t('Token related to the Hello World module.'),
  ];

  $tokens['salutation'] = [
    'name' => t('Salutation'),
    'description' => t('The Hello World salutation value.'),
  ];

  return [
    'types' => ['hello_world' => $type],
    'tokens' => ['hello_world' => $tokens],
  ];
}

/**
 * Implement hook_tokens()
 */
function hello_world_tokens($type, $tokens, array $dta, array $options,  $bubbleable_metadata)
{
  $replacements = [];

  if($type === 'hello_world'){
    foreach($tokens as $name => $original){
      switch($name){
        case 'salutation':
          $replacements[$original] = \Drupal::service('hello_world.salutation')->getSalutation();
          $config = \Drupal::config('hello_world.custom_salutation');
          $bubbleable_metadata->addCacheableDependency($config);
          break;
      }
    }
  }

  return $replacements;
}